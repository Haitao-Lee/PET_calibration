import matplotlib.pyplot as plt
import numpy as np


MSELoss = 'C:/work_and_study/code/flood-map-standardization/0518/my_exp/MSELoss/'
L1Loss = 'C:/work_and_study/code/flood-map-standardization/0518/my_exp/L1Loss/'
maxoffset = 'C:/work_and_study/code/flood-map-standardization/0518/my_exp/maxoffset/'
dense121_no_mean = 'denseNet121_reg.npy'
dense121_mean = 'denseNet121_reg_mean.npy'
dense169_no_mean = 'denseNet169_reg.npy'
dense169_mean = 'denseNet169_reg_mean.npy'
final_mean = 'finalNet_reg_mean.npy'
final_no_mean = 'finalNet_reg.npy'
st_mean = 'stRegNet_mean.npy'
st_no_mean = 'stRegNet_no_mean.npy'
res18 = 'ResNet18.npy'
res18_mean = 'ResNet18_mean.npy'
res34 = 'ResNet34.npy'
res34_mean = 'ResNet34_mean.npy'
UNet3plus = 'UNet3plus.npy'
UNet3plus_mean = 'UNet3plus_mean.npy'
unet = 'UNet.npy'
unet_mean = 'UNet_mean.npy'
laddernet = 'laddernet.npy'
laddernet_mean = 'laddernet_mean.npy'
convNext = 'convNext.npy'
convNext_mean = 'convNext_mean.npy'
mean = 'mean.npy'



#横向
res18_npy = np.load(MSELoss + res18)
res18__mean_npy = np.load(MSELoss + res18_mean)
res34_npy = np.load(MSELoss + res34)
res34_mean_npy = np.load(MSELoss + res34_mean)
dense121_npy = np.load(MSELoss + dense121_no_mean)
dense121_mean_npy = np.load(MSELoss + dense121_mean)
dense169_npy = np.load(MSELoss + dense169_no_mean)
dense169_mean_npy = np.load(MSELoss + dense169_mean)
unet_npy = np.load(MSELoss + unet)
unet_mean_npy = np.load(MSELoss + unet_mean)
unet3plus_npy = np.load(MSELoss + UNet3plus)
unet3plus_mean_npy = np.load(MSELoss + UNet3plus_mean)
laddernet_npy = np.load(MSELoss + laddernet)
laddernet_mean_npy = np.load(MSELoss + laddernet_mean)
convNext_npy = np.load(MSELoss + convNext)
convNext_mean_npy = np.load(MSELoss + convNext_mean)
convNext_mean_npy = np.load(MSELoss + convNext_mean)
finalnet_npy = np.load(MSELoss + st_no_mean)
finalnet_mean_npy = np.load(MSELoss + final_mean)
mean_npy = np.load(MSELoss + mean)
print('MSE:')
print("ResNet18:", np.mean(res18_npy), np.std(res18_npy))
print("ResNet18_mean:", np.mean(res18__mean_npy), np.std(res18__mean_npy))
print("ResNet34:", np.mean(res34_npy), np.std(res34_npy))
print("ResNet34_mean:", np.mean(res34_mean_npy), np.std(res34_mean_npy))
print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
print("DenseNet121_mean:", np.mean(dense121_mean_npy), np.std(dense121_mean_npy))
print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
print("DenseNet169_mean:", np.mean(dense169_mean_npy), np.std(dense169_mean_npy))
print("UNet:", np.mean(unet_npy), np.std(unet_npy))
print("UNet_mean:", np.mean(unet_mean_npy), np.std(unet_mean_npy))
print("UNet+++:", np.mean(unet3plus_npy), np.std(unet3plus_npy))
print("UNet+++_mean:", np.mean(unet3plus_mean_npy), np.std(unet3plus_mean_npy))
print("laddernet:", np.mean(laddernet_npy), np.std(laddernet_npy))
print("laddernet_mean:", np.mean(laddernet_mean_npy), np.std(laddernet_mean_npy))
print("convNext:", np.mean(convNext_npy), np.std(convNext_npy))
print("convNext_mean:", np.mean(convNext_mean_npy), np.std(convNext_mean_npy))
print("finalnet:", np.mean(finalnet_npy), np.std(finalnet_npy))
print("finalnet_mean:", np.mean(finalnet_mean_npy), np.std(finalnet_mean_npy))
print('mean:', np.mean(mean_npy), np.std(mean_npy))


#横向
res18_npy = np.load(L1Loss + res18)
res18__mean_npy = np.load(L1Loss + res18_mean)
res34_npy = np.load(L1Loss + res34)
res34_mean_npy = np.load(L1Loss + res34_mean)
dense121_npy = np.load(L1Loss + dense121_no_mean)
dense121_mean_npy = np.load(L1Loss + dense121_mean)
dense169_npy = np.load(L1Loss + dense169_no_mean)
dense169_mean_npy = np.load(L1Loss + dense169_mean)
unet_npy = np.load(L1Loss + unet)
unet_mean_npy = np.load(L1Loss + unet_mean)
unet3plus_npy = np.load(L1Loss + UNet3plus)
unet3plus_mean_npy = np.load(L1Loss + UNet3plus_mean)
laddernet_npy = np.load(L1Loss + laddernet)
laddernet_mean_npy = np.load(L1Loss + laddernet_mean)
convNext_npy = np.load(L1Loss + convNext)
convNext_mean_npy = np.load(L1Loss + convNext_mean)
finalnet_npy = np.load(L1Loss + st_no_mean)
finalnet_mean_npy = np.load(L1Loss + final_mean)
mean_npy = np.load(L1Loss + mean)
print('L1Loss:')
print("ResNet18:", np.mean(res18_npy), np.std(res18_npy))
print("ResNet18_mean:", np.mean(res18__mean_npy), np.std(res18__mean_npy))
print("ResNet34:", np.mean(res34_npy), np.std(res34_npy))
print("ResNet34_mean:", np.mean(res34_mean_npy), np.std(res34_mean_npy))
print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
print("DenseNet121_mean:", np.mean(dense121_mean_npy), np.std(dense121_mean_npy))
print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
print("DenseNet169_mean:", np.mean(dense169_mean_npy), np.std(dense169_mean_npy))
print("UNet:", np.mean(unet_npy), np.std(unet_npy))
print("UNet_mean:", np.mean(unet_mean_npy), np.std(unet_mean_npy))
print("UNet+++:", np.mean(unet3plus_npy), np.std(unet3plus_npy))
print("UNet+++_mean:", np.mean(unet3plus_mean_npy), np.std(unet3plus_mean_npy))
print("laddernet:", np.mean(laddernet_npy), np.std(laddernet_npy))
print("laddernet_mean:", np.mean(laddernet_mean_npy), np.std(laddernet_mean_npy))
print("convNext:", np.mean(convNext_npy), np.std(convNext_npy))
print("convNext_mean:", np.mean(convNext_mean_npy), np.std(convNext_mean_npy))
print("finalnet:", np.mean(finalnet_npy), np.std(finalnet_npy))
print("finalnet_mean:", np.mean(finalnet_mean_npy), np.std(finalnet_mean_npy))
print('mean:', np.mean(mean_npy), np.std(mean_npy))



'''

x = range(res18_npy.shape[0])
plt.figure()        
plt.title('MSE loss') 
plt.plot(x, res18_npy, label="ResNet18")
plt.plot(x, res34_npy, label="ResNet34")
plt.plot(x, dense121_npy, label="DenseNet121")
plt.plot(x, dense169_npy, label="DenseNet169")
plt.plot(x, unet_npy, label="UNet")
plt.plot(x, mean_npy, label=r"$\mathcal{M}$")
plt.plot(x, denreg_npy, label=r"our CNN with $\mathcal{M}$")
plt.legend()
plt.show()

res18_npy = np.load(L1Loss + res18)
res34_npy = np.load(L1Loss + res34)
dense121_npy = np.load(L1Loss + dense121_no_mean)
dense169_npy = np.load(L1Loss + dense169_no_mean)
unet_npy = np.load(L1Loss + unet)
unet_mean = np.load(L1Loss + unet_mean)
st_npy = np.load(L1Loss + st_mean)
denreg_npy = np.load(L1Loss + final_mean)
mean_npy = np.load(L1Loss + mean)
# print('L1:')
# print("ResNet18:", np.mean(res18_npy), np.std(res18_npy))
# print("ResNet34:", np.mean(res34_npy), np.std(res34_npy))
# print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
# print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
# print("UNet:", np.mean(unet_npy), np.std(unet_npy))
# print("stNet:", np.mean(st_npy), np.std(st_npy))
# print("denreg:", np.mean(denreg_npy), np.std(denreg_npy))
# print("mean:", np.mean(mean_npy), np.std(mean_npy))

# x = range(res18_npy.shape[0])
# plt.figure()        
# plt.title('L1 loss') 
# plt.plot(x, res18_npy, label="ResNet18")
# plt.plot(x, res34_npy, label="ResNet34")
# plt.plot(x, dense121_npy, label="DenseNet121")
# plt.plot(x, dense169_npy, label="DenseNet169")
# plt.plot(x, unet_npy, label="UNet")
# plt.plot(x, mean_npy, label=r"$\mathcal{M}$")
# plt.plot(x, denreg_npy, label=r"our CNN with $\mathcal{M}$")
# plt.legend()
# plt.show()


# res18_npy = np.load(maxoffset + res18)
# res34_npy = np.load(maxoffset + res34)
# dense121_npy = np.load(maxoffset + dense121_no_mean)
# dense169_npy = np.load(maxoffset + dense169_no_mean)
# unet_npy = np.load(maxoffset + unet)
# st_npy = np.load(maxoffset + st_mean)
# denreg_npy = np.load(maxoffset + final_mean)
# print('max offset:')
# print("ResNet18:", np.mean(res18_npy), np.std(res18_npy))
# print("ResNet34:", np.mean(res34_npy), np.std(res34_npy))
# print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
# print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
# print("UNet:", np.mean(unet_npy), np.std(unet_npy))
# print("stNet:", np.mean(st_npy), np.std(st_npy))
# print("denreg:", np.mean(denreg_npy), np.std(denreg_npy))
# print("mean:", np.mean(mean_npy), np.std(mean_npy))

# x = range(0, res18_npy.shape[0])
# plt.figure()        
# plt.title('max offset') 
# plt.plot(x, res18_npy, label="ResNet18")
# plt.plot(x, res34_npy, label="ResNet34")
# plt.plot(x, dense121_npy, label="DenseNet121")
# plt.plot(x, dense169_npy, label="DenseNet169")
# plt.plot(x, unet_npy, label="UNet")
# plt.plot(x, mean_npy, label=r"$\mathcal{M}$")
# plt.plot(x, denreg_npy, label=r"our CNN with $\mathcal{M}$")
# plt.legend()
# plt.show()





# #消融
# dense121_npy = np.load(MSELoss + dense121_no_mean)
# dense169_npy = np.load(MSELoss + dense169_no_mean)
# dense121_mean_npy = np.load(MSELoss + dense121_mean)
# dense169_mean_npy = np.load(MSELoss + dense169_mean)
# st_npy_mean = np.load(MSELoss + st_mean)
# denreg_npy_mean = np.load(MSELoss + final_mean)
# st_npy = np.load(MSELoss + st_no_mean)
# denreg_npy = np.load(MSELoss + final_no_mean)
# unet = np.load(MSELoss + unet)
# unet_mean = np.load(MSELoss + unet_mean)
print('MSE:')
# print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
# print("DenseNet169_mean:", np.mean(dense169_mean_npy), np.std(dense169_mean_npy))
# print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
# print("DenseNet121_mean:", np.mean(dense121_mean_npy), np.std(dense121_mean_npy))
# print("stNet:", np.mean(st_npy), np.std(st_npy))
# print("stNet_mean:", np.mean(st_npy_mean), np.std(st_npy_mean))
# print("denreg:", np.mean(denreg_npy), np.std(denreg_npy))
# print("denreg_mean:", np.mean(denreg_npy_mean), np.std(denreg_npy_mean))
# print("mean:", np.mean(mean_npy), np.std(mean_npy))
# print("unet:", np.mean(unet), np.std(unet))
# print("unet_mean:", np.mean(unet_mean), np.std(unet_mean))
res18_npy = np.load(MSELoss + res18)
res18_mean_npy = np.load(MSELoss + res18_mean)
print("res18_npy:", np.mean(res18_npy), np.std(res18_npy))
print("res18_mean_npy:", np.mean(res18_mean_npy), np.std(res18_mean_npy))

# x = range(dense121_npy.shape[0])
# plt.figure()        
# plt.title('MSE loss') 
# plt.plot(x, dense169_npy, label="DenseNet169")
# plt.plot(x, dense169_mean_npy, label="DenseNet169 with $\mathcal{M}$")
# plt.plot(x, dense121_npy, label="DenseNet121")
# plt.plot(x, dense121_mean_npy, label=r"DenseNet121 with $\mathcal{M}$")
# plt.plot(x, st_npy, label=r"our CNN")
# plt.plot(x, denreg_npy_mean, label="my_modle2")
# plt.legend()
# plt.show()

dense121_npy = np.load(L1Loss + dense121_no_mean)
dense169_npy = np.load(L1Loss + dense169_no_mean)
dense121_mean_npy = np.load(L1Loss + dense121_mean)
dense169_mean_npy = np.load(L1Loss + dense169_mean)
st_npy_mean = np.load(L1Loss + st_mean)
denreg_npy_mean = np.load(L1Loss + final_mean)
st_npy = np.load(L1Loss + st_no_mean)
denreg_npy = np.load(L1Loss + final_no_mean)    
# unet_npy = np.load(L1Loss + unet)
# unet_mean = np.load(L1Loss + unet_mean)
res18_npy = np.load(MSELoss + res18)
res18_mean_npy = np.load(MSELoss + res18_mean)
print('L1 Loss:')
print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
print("DenseNet169_mean:", np.mean(dense169_mean_npy), np.std(dense169_mean_npy))
print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
print("DenseNet121_mean:", np.mean(dense121_mean_npy), np.std(dense121_mean_npy))
print("stNet:", np.mean(st_npy), np.std(st_npy))
print("stNet_mean:", np.mean(st_npy_mean), np.std(st_npy_mean))
print("denreg:", np.mean(denreg_npy), np.std(denreg_npy))
print("denreg_mean:", np.mean(denreg_npy_mean), np.std(denreg_npy_mean))
# print("unet:", np.mean(unet), np.std(unet))
print("unet_mean:", np.mean(unet_mean), np.std(unet_mean))
print("res18_npy:", np.mean(res18_npy), np.std(res18_npy))
print("res18_mean_npy:", np.mean(res18_mean_npy), np.std(res18_mean_npy))

x = range(dense121_npy.shape[0])
plt.figure()        
plt.title('maxoffset') 
plt.plot(x, dense169_npy, label="DenseNet169")
plt.plot(x, dense169_mean_npy, label="DenseNet169 with $\mathcal{M}$")
plt.plot(x, dense121_npy, label="DenseNet121")
plt.plot(x, dense121_mean_npy, label="DenseNet121_mean")
plt.plot(x, st_npy, label="my_modle1_no_mean")
plt.plot(x, st_npy_mean, label="my_modle1")
plt.plot(x, denreg_npy, label="my_modle2_no_mean")
plt.plot(x, denreg_npy_mean, label=r"our CNN with $\mathcal{M}$")
plt.legend()
plt.show()

# dense121_npy = np.load(maxoffset + dense121_no_mean)
# dense169_npy = np.load(maxoffset + dense169_no_mean)
# dense121_mean_npy = np.load(maxoffset + dense121_mean)
# dense169_mean_npy = np.load(maxoffset + dense169_mean)
# st_npy_mean = np.load(maxoffset + st_mean)
# denreg_npy_mean = np.load(maxoffset + final_mean)
# st_npy = np.load(maxoffset + st_no_mean)
# denreg_npy = np.load(maxoffset + final_no_mean)
# unet = np.load(maxoffset + unet)
# unet_mean = np.load(maxoffset + unet_mean)
# print('maxoffset:')
# print("DenseNet169:", np.mean(dense169_npy), np.std(dense169_npy))
# print("DenseNet169_mean:", np.mean(dense169_mean_npy), np.std(dense169_mean_npy))
# print("DenseNet121:", np.mean(dense121_npy), np.std(dense121_npy))
# print("DenseNet121_mean:", np.mean(dense121_mean_npy), np.std(dense121_mean_npy))
# print("stNet:", np.mean(st_npy), np.std(st_npy))
# print("stNet_mean:", np.mean(st_npy_mean), np.std(st_npy_mean))
# print("denreg:", np.mean(denreg_npy), np.std(denreg_npy))
# print("denreg_mean:", np.mean(denreg_npy_mean), np.std(denreg_npy_mean))
# print("unet:", np.mean(unet), np.std(unet))
# print("unet_mean:", np.mean(unet_mean), np.std(unet_mean))

# x = range(dense121_npy.shape[0])
# plt.figure()        
# plt.title('maxoffset') 
# plt.plot(x, dense169_npy, label="DenseNet169")
# plt.plot(x, dense169_mean_npy, label="DenseNet169 with $\mathcal{M}$")
# plt.plot(x, dense121_npy, label="DenseNet121")
# plt.plot(x, dense121_mean_npy, label="DenseNet121 with $\mathcal{M}$")
# plt.plot(x, st_npy, label="our CNN")
# plt.plot(x, denreg_npy_mean, label=r"our CNN with $\mathcal{M}$")
# plt.legend()
# plt.show()
'''